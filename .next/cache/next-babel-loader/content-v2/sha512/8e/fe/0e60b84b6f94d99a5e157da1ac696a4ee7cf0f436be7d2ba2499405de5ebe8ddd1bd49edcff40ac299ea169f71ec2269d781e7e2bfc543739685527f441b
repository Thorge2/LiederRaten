{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Card, Form, Button, Overlay, Tooltip, Alert } from \"react-bootstrap\";\nimport { CirclePicker } from \"react-color\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { usePlayers } from \"../../hooks/players\";\n\nconst Add = () => {\n  const {\n    0: color,\n    1: setColor\n  } = useState(\"#efefef\");\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const target = useRef(null);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  useEffect(() => {\n    setShow(name.length === 0);\n  }, [name]);\n  const [players, setPlayers] = usePlayers();\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (name.length !== 0) {\n      setPlayers([...players, {\n        name: name,\n        score: 0,\n        color: color\n      }]);\n      setName(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Card.Header, {\n      style: {\n        backgroundColor: color\n      },\n      children: /*#__PURE__*/_jsx(Card.Title, {\n        children: /*#__PURE__*/_jsxs(\"h1\", {\n          children: [name.length == 0 ? \"Spieler hinzufÃ¼gen\" : name, \" \"]\n        })\n      })\n    }), /*#__PURE__*/_jsx(Card.Body, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsx(Form.Label, {\n          children: /*#__PURE__*/_jsx(\"h3\", {\n            children: \"Name\"\n          })\n        }), /*#__PURE__*/_jsx(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          ref: target\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Form.Label, {\n          children: /*#__PURE__*/_jsx(\"h3\", {\n            children: \"Farbe\"\n          })\n        }), /*#__PURE__*/_jsx(CirclePicker, {\n          color: color,\n          colors: [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#607d8b\", \"#efefef\"],\n          onChangeComplete: c => setColor(c.hex)\n        }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Button, {\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Spieler hinzuf\\xFCgen\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Overlay, {\n      target: target.current,\n      show: show,\n      placement: \"bottom\",\n      children: props => /*#__PURE__*/_jsx(Alert, _objectSpread(_objectSpread({\n        variant: \"danger\"\n      }, props), {}, {\n        children: \"Name ist Leer\"\n      }))\n    })]\n  });\n};\n\nexport default Add;","map":null,"metadata":{},"sourceType":"module"}