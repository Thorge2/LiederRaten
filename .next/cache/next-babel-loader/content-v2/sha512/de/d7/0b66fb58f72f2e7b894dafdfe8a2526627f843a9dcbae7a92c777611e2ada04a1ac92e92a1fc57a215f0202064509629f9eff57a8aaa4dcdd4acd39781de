{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/[id].js\";\nimport { useRouter } from \"next/router\";\nimport { Card, ListGroup, Badge } from \"react-bootstrap\";\nimport { useGame } from \"../../hooks/games\";\n\nconst Game = () => {\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useGame(router.query.id);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [data.game.name, /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"primary\",\n              children: data.game.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Datum: \", new Date(parseInt(data.game.date)).toLocaleDateString(), \" | \", new Date(parseInt(data.game.date)).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: data.game.players.map((player, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [player.name, \"  \", /*#__PURE__*/_jsxDEV(Badge, {\n                style: {\n                  backgroundColor: player.color\n                },\n                children: player.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/[id].js"],"names":["useRouter","Card","ListGroup","Badge","useGame","Game","router","loading","error","data","query","id","game","name","Date","parseInt","date","toLocaleDateString","toLocaleTimeString","players","map","player","i","backgroundColor","color","score"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,OAAO,CAACE,MAAM,CAACI,KAAP,CAAaC,EAAd,CAAxC;AAEA,sBACE,QAAC,IAAD;AAAA,cACGJ,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA,uBACGE,IAAI,CAACG,IAAL,CAAUC,IADb,eAEE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA,wBAA0BJ,IAAI,CAACG,IAAL,CAAUD;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,kCACU,IAAIG,IAAJ,CAASC,QAAQ,CAACN,IAAI,CAACG,IAAL,CAAUI,IAAX,CAAjB,EAAmCC,kBAAnC,EADV,EAEG,KAFH,EAGG,IAAIH,IAAJ,CAASC,QAAQ,CAACN,IAAI,CAACG,IAAL,CAAUI,IAAX,CAAjB,EAAmCE,kBAAnC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,oBACGT,IAAI,CAACG,IAAL,CAAUO,OAAV,CAAkBC,GAAlB,CAAsB,CAACC,MAAD,EAASC,CAAT,kBACrB,QAAC,SAAD,CAAW,IAAX;AAAA,mCACE;AAAA,yBACGD,MAAM,CAACR,IADV,EAEG,IAFH,eAGE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAAEU,kBAAAA,eAAe,EAAEF,MAAM,CAACG;AAA1B,iBAAd;AAAA,0BACGH,MAAM,CAACI;AADV;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAqBH,CAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA5CD;;AA8CA,eAAejB,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { Card, ListGroup, Badge } from \"react-bootstrap\";\nimport { useGame } from \"../../hooks/games\";\n\nconst Game = () => {\n  const router = useRouter();\n\n  const { loading, error, data } = useGame(router.query.id);\n\n  return (\n    <Card>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <>\n          <Card.Header>\n            <Card.Title>\n              <h1>\n                {data.game.name}\n                <Badge variant=\"primary\">{data.game.id}</Badge>\n              </h1>\n              <p>\n                Datum: {new Date(parseInt(data.game.date)).toLocaleDateString()}\n                {\" | \"}\n                {new Date(parseInt(data.game.date)).toLocaleTimeString()}\n              </p>\n            </Card.Title>\n          </Card.Header>\n\n          <Card.Body>\n            <ListGroup variant=\"flush\">\n              {data.game.players.map((player, i) => (\n                <ListGroup.Item key={i}>\n                  <h2>\n                    {player.name}\n                    {\"  \"}\n                    <Badge style={{ backgroundColor: player.color }}>\n                      {player.score}\n                    </Badge>\n                  </h2>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card.Body>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}