{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SaveGame($name: String!, $players: [PlayerInput!]!) {\\n    saveGame(name: $name, players: $players) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query Game($id: ID!) {\\n    game(id: $id) {\\n      id\\n      name\\n      date\\n      players {\\n        name\\n        score\\n        color\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DeleteGame($id: ID!) {\\n    deleteGame(id: $id)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Games {\\n    games {\\n      id\\n      name\\n      date\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, useMutation, gql } from \"@apollo/client\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport var GamesProvider = function GamesProvider(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsx(ApolloProvider, {\n    client: client,\n    children: children\n  });\n};\nvar GAMES = gql(_templateObject());\nexport var useGames = function useGames() {\n  return useQuery(GAMES);\n};\nvar DELETE_GAME = gql(_templateObject2());\nexport var useDeleteGame = function useDeleteGame() {\n  return useMutation(DELETE_GAME, {\n    update: function update(cache, _ref2) {\n      var data = _ref2.data;\n      cache.modify({\n        fields: {\n          games: function games(existing) {}\n        }\n      });\n    }\n  });\n};\nvar GAME = gql(_templateObject3());\nexport var useGame = function useGame(id) {\n  return useQuery(GAME, {\n    variables: {\n      id: id\n    }\n  });\n};\nvar SAVE_GAME = gql(_templateObject4());\nexport var useSaveGame = function useSaveGame() {\n  return useMutation(SAVE_GAME, {\n    update: function update(cache, _ref3) {\n      var data = _ref3.data;\n      cache.modify({\n        fields: {\n          games: function games(existing) {}\n        }\n      });\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}