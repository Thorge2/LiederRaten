{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Badge, Card, ListGroup } from \"react-bootstrap\";\nimport { useGames } from \"../../hooks/games\";\nimport Game from \"../../components/game\";\nimport { useDeleteGame } from \"../../hooks/games\";\n\nvar Games = function Games() {\n  _s();\n\n  var _useGames = useGames(),\n      loading = _useGames.loading,\n      error = _useGames.error,\n      data = _useGames.data;\n\n  var _useDeleteGame = useDeleteGame(),\n      _useDeleteGame2 = _slicedToArray(_useDeleteGame, 2),\n      deleteGame = _useDeleteGame2[0],\n      res = _useDeleteGame2[1].res;\n\n  var highscore = function highscore() {\n    var high = {\n      score: 0,\n      name: \"\",\n      color: \"\"\n    };\n    data.games.map(function (game) {\n      game.players.map(function (player) {\n        if (high.score < player.score) high = player;\n      });\n    });\n    return high;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      maxHeight: \"80vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Spiele\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Highscore:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: highscore().name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: loading ? \"loading...\" : data.games.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Keine Spiele gespeichert...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this) : data.games.slice().reverse().map(function (g, i) {\n          return /*#__PURE__*/_jsxDEV(Game, {\n            game: g,\n            remove: function remove(id) {\n              return deleteGame({\n                variables: {\n                  id: id\n                }\n              });\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Games, \"JNC7DJqrt/FAjf49uJ0Rx3SdubA=\", false, function () {\n  return [useGames, useDeleteGame];\n});\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/index.js"],"names":["Badge","Card","ListGroup","useGames","Game","useDeleteGame","Games","loading","error","data","deleteGame","res","highscore","high","score","name","color","games","map","game","players","player","maxHeight","overflow","length","slice","reverse","g","i","id","variables"],"mappings":";;;;;;;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACeH,QAAQ,EADvB;AAAA,MACVI,OADU,aACVA,OADU;AAAA,MACDC,KADC,aACDA,KADC;AAAA,MACMC,IADN,aACMA,IADN;;AAAA,uBAGYJ,aAAa,EAHzB;AAAA;AAAA,MAGXK,UAHW;AAAA,MAGGC,GAHH,sBAGGA,GAHH;;AAKlB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIC,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE,EAAlB;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAX;AACAP,IAAAA,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAU;AACvBA,MAAAA,IAAI,CAACC,OAAL,CAAaF,GAAb,CAAiB,UAACG,MAAD,EAAY;AAC3B,YAAIR,IAAI,CAACC,KAAL,GAAaO,MAAM,CAACP,KAAxB,EAA+BD,IAAI,GAAGQ,MAAP;AAChC,OAFD;AAGD,KAJD;AAKA,WAAOR,IAAP;AACD,GARD;;AAUA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAKX,SAAS,GAAGG;AAAjB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBACGR,OAAO,GACN,YADM,GAEJE,IAAI,CAACQ,KAAL,CAAWO,MAAX,IAAqB,CAArB,gBACF;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADE,GAKFf,IAAI,CAACQ,KAAL,CACGQ,KADH,GAEGC,OAFH,GAGGR,GAHH,CAGO,UAACS,CAAD,EAAIC,CAAJ;AAAA,8BACH,QAAC,IAAD;AACE,YAAA,IAAI,EAAED,CADR;AAEE,YAAA,MAAM,EAAE,gBAACE,EAAD;AAAA,qBAAQnB,UAAU,CAAC;AAAEoB,gBAAAA,SAAS,EAAE;AAAED,kBAAAA,EAAE,EAAFA;AAAF;AAAb,eAAD,CAAlB;AAAA;AAFV,aAGOD,CAHP;AAAA;AAAA;AAAA;AAAA,mBADG;AAAA,SAHP;AARJ;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqCD,CApDD;;GAAMtB,K;UAC6BH,Q,EAEHE,a;;;KAH1BC,K;AAsDN,eAAeA,KAAf","sourcesContent":["import { Badge, Card, ListGroup } from \"react-bootstrap\";\nimport { useGames } from \"../../hooks/games\";\nimport Game from \"../../components/game\";\nimport { useDeleteGame } from \"../../hooks/games\";\n\nconst Games = () => {\n  const { loading, error, data } = useGames();\n\n  const [deleteGame, { res }] = useDeleteGame();\n\n  const highscore = () => {\n    let high = { score: 0, name: \"\", color: \"\" };\n    data.games.map((game) => {\n      game.players.map((player) => {\n        if (high.score < player.score) high = player;\n      });\n    });\n    return high;\n  };\n\n  return (\n    <Card style={{ maxHeight: \"80vh\" }}>\n      <Card.Header>\n        <Card.Title>\n          <h1>Spiele</h1>\n        </Card.Title>\n      </Card.Header>\n\n      <Card.Body style={{ overflow: \"auto\" }}>\n        <Card.Text>\n          <h3>Highscore:</h3>\n          <h4>{highscore().name}</h4>\n        </Card.Text>\n\n        <ListGroup variant=\"flush\">\n          {loading ? (\n            \"loading...\"\n          ) : data.games.length == 0 ? (\n            <div>\n              <h2>Keine Spiele gespeichert...</h2>\n            </div>\n          ) : (\n            data.games\n              .slice()\n              .reverse()\n              .map((g, i) => (\n                <Game\n                  game={g}\n                  remove={(id) => deleteGame({ variables: { id } })}\n                  key={i}\n                ></Game>\n              ))\n          )}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}