{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/save.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Overlay, Alert } from \"react-bootstrap\";\nimport { usePlayers } from \"../../hooks/players\";\nimport { useSaveGame } from \"../../hooks/games\";\n\nconst Save = () => {\n  const [players, setPlayers] = usePlayers();\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const target = useRef(null);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Spiel Speichern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          e.preventDefault();\n          if (name.length === 0 || players.length === 0) return;\n          console.log(\"Save\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          ref: target\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Spieler: \", players.length, \" \", players.length === 0 ? \"(füge einen Spieler hinzu)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Speichern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: name.length === 0,\n      placement: \"bottom\",\n      children: props => /*#__PURE__*/_jsxDEV(Alert, _objectSpread(_objectSpread({\n        variant: \"danger\"\n      }, props), {}, {\n        children: \"Name ist Leer\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Save;","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/save.js"],"names":["useState","useEffect","useRef","Card","Form","Button","Overlay","Alert","usePlayers","useSaveGame","Save","players","setPlayers","name","setName","target","e","preventDefault","length","console","log","value","current","props"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,KAAtC,QAAmD,iBAAnD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,UAAU,EAAxC;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMe,MAAM,GAAGb,MAAM,CAAC,IAAD,CAArB;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,QAAQ,EAAGc,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAIJ,IAAI,CAACK,MAAL,KAAgB,CAAhB,IAAqBP,OAAO,CAACO,MAAR,KAAmB,CAA5C,EAA+C;AAC/CC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,SALH;AAAA,gCAOE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,KAAK,EAAEP,IADT;AAEE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACD,MAAF,CAASM,KAAV,CAF1B;AAGE,UAAA,GAAG,EAAEN;AAHP;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACYJ,OAAO,CAACO,MADpB,EAC4B,GAD5B,EAEGP,OAAO,CAACO,MAAR,KAAmB,CAAnB,GAAuB,4BAAvB,GAAsD,EAFzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAkBE;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAiCE,QAAC,OAAD;AACE,MAAA,MAAM,EAAEH,MAAM,CAACO,OADjB;AAEE,MAAA,IAAI,EAAET,IAAI,CAACK,MAAL,KAAgB,CAFxB;AAGE,MAAA,SAAS,EAAC,QAHZ;AAAA,gBAKIK,KAAD,iBACC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf,SAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CArDD;;AAuDA,eAAeb,IAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Overlay, Alert } from \"react-bootstrap\";\nimport { usePlayers } from \"../../hooks/players\";\nimport { useSaveGame } from \"../../hooks/games\";\n\nconst Save = () => {\n  const [players, setPlayers] = usePlayers();\n  const [name, setName] = useState(\"\");\n\n  const target = useRef(null);\n\n  return (\n    <Card>\n      <Card.Header>\n        <Card.Title>\n          <h1>Spiel Speichern</h1>\n        </Card.Title>\n      </Card.Header>\n\n      <Card.Body>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (name.length === 0 || players.length === 0) return;\n            console.log(\"Save\");\n          }}\n        >\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ref={target}\n          />\n          <br />\n          <Form.Label>\n            Spieler: {players.length}{\" \"}\n            {players.length === 0 ? \"(füge einen Spieler hinzu)\" : \"\"}\n          </Form.Label>\n          <br />\n          <Button type=\"submit\" variant=\"success\">\n            Speichern\n          </Button>\n        </Form>\n      </Card.Body>\n\n      <Overlay\n        target={target.current}\n        show={name.length === 0}\n        placement=\"bottom\"\n      >\n        {(props) => (\n          <Alert variant=\"danger\" {...props}>\n            Name ist Leer\n          </Alert>\n        )}\n      </Overlay>\n    </Card>\n  );\n};\n\nexport default Save;\n"]},"metadata":{},"sourceType":"module"}