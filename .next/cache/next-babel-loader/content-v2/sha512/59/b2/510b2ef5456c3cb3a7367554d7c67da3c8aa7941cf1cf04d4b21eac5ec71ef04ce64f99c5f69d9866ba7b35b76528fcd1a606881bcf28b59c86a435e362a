{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { Card, ListGroup, Badge } from \"react-bootstrap\";\nimport { useGame } from \"../../hooks/games\";\n\nvar Game = function Game() {\n  _s();\n\n  var router = useRouter();\n\n  var _useGame = useGame(router.query.id),\n      loading = _useGame.loading,\n      error = _useGame.error,\n      data = _useGame.data;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [data.game.name, /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"primary\",\n              children: data.game.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Datum: \", new Date(parseInt(data.game.date)).toLocaleDateString(), \" | \", new Date(parseInt(data.game.date)).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: data.game.players.map(function (player, i) {\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [player.name, \"  \", /*#__PURE__*/_jsxDEV(Badge, {\n                  style: {\n                    backgroundColor: player.color\n                  },\n                  children: player.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Game, \"+QDjQb3WSkwC+gwJSYlorHmq3Kk=\", false, function () {\n  return [useRouter, useGame];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/[id].js"],"names":["useRouter","Card","ListGroup","Badge","useGame","Game","router","query","id","loading","error","data","game","name","Date","parseInt","date","toLocaleDateString","toLocaleTimeString","players","map","player","i","backgroundColor","color","score"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADiB,iBAGgBI,OAAO,CAACE,MAAM,CAACC,KAAP,CAAaC,EAAd,CAHvB;AAAA,MAGTC,OAHS,YAGTA,OAHS;AAAA,MAGAC,KAHA,YAGAA,KAHA;AAAA,MAGOC,IAHP,YAGOA,IAHP;;AAKjB,sBACE,QAAC,IAAD;AAAA,cACGF,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADM,gBAGN;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA,uBACGE,IAAI,CAACC,IAAL,CAAUC,IADb,eAEE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA,wBAA0BF,IAAI,CAACC,IAAL,CAAUJ;AAApC;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE;AAAA,kCACU,IAAIM,IAAJ,CAASC,QAAQ,CAACJ,IAAI,CAACC,IAAL,CAAUI,IAAX,CAAjB,EAAmCC,kBAAnC,EADV,EAEG,KAFH,EAGG,IAAIH,IAAJ,CAASC,QAAQ,CAACJ,IAAI,CAACC,IAAL,CAAUI,IAAX,CAAjB,EAAmCE,kBAAnC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAeE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,oBACGP,IAAI,CAACC,IAAL,CAAUO,OAAV,CAAkBC,GAAlB,CAAsB,UAACC,MAAD,EAASC,CAAT;AAAA,gCACrB,QAAC,SAAD,CAAW,IAAX;AAAA,qCACE;AAAA,2BACGD,MAAM,CAACR,IADV,EAEG,IAFH,eAGE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAE;AAAEU,oBAAAA,eAAe,EAAEF,MAAM,CAACG;AAA1B,mBAAd;AAAA,4BACGH,MAAM,CAACI;AADV;AAAA;AAAA;AAAA;AAAA,yBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAqBH,CAArB;AAAA;AAAA;AAAA;AAAA,qBADqB;AAAA,WAAtB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAfF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,WADF;AAuCD,CA5CD;;GAAMjB,I;UACWL,S,EAEkBI,O;;;KAH7BC,I;AA8CN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { Card, ListGroup, Badge } from \"react-bootstrap\";\nimport { useGame } from \"../../hooks/games\";\n\nconst Game = () => {\n  const router = useRouter();\n\n  const { loading, error, data } = useGame(router.query.id);\n\n  return (\n    <Card>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <>\n          <Card.Header>\n            <Card.Title>\n              <h1>\n                {data.game.name}\n                <Badge variant=\"primary\">{data.game.id}</Badge>\n              </h1>\n              <p>\n                Datum: {new Date(parseInt(data.game.date)).toLocaleDateString()}\n                {\" | \"}\n                {new Date(parseInt(data.game.date)).toLocaleTimeString()}\n              </p>\n            </Card.Title>\n          </Card.Header>\n\n          <Card.Body>\n            <ListGroup variant=\"flush\">\n              {data.game.players.map((player, i) => (\n                <ListGroup.Item key={i}>\n                  <h2>\n                    {player.name}\n                    {\"  \"}\n                    <Badge style={{ backgroundColor: player.color }}>\n                      {player.score}\n                    </Badge>\n                  </h2>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card.Body>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}