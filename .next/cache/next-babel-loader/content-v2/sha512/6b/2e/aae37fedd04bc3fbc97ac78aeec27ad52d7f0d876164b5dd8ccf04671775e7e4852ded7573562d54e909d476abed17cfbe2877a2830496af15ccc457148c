{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/players/add.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Card, Form, Button, Overlay, Tooltip, Alert } from \"react-bootstrap\";\nimport { CirclePicker } from \"react-color\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { usePlayers } from \"../../hooks/players\";\n\nconst Add = () => {\n  const {\n    0: color,\n    1: setColor\n  } = useState(\"#000000\");\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const target = useRef(null);\n  const [players, setPlayers] = usePlayers();\n  useEffect(() => {\n    setShow(name.length === 0);\n  }, [name]);\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (name.length !== 0) {\n      setPlayers([...players, {\n        name: name,\n        score: 0,\n        color: color\n      }]);\n      setName(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      style: {\n        backgroundColor: color\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [name.length == 0 ? \"Spieler hinzufügen\" : name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          ref: target\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Farbe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CirclePicker, {\n          color: color,\n          colors: [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#607d8b\", \"#efefef\"],\n          onChangeComplete: c => setColor(c.hex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Spieler hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: show,\n      placement: \"bottom\",\n      children: props => /*#__PURE__*/_jsxDEV(Alert, _objectSpread(_objectSpread({\n        variant: \"danger\"\n      }, props), {}, {\n        children: \"Name ist Leer\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Add;","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/players/add.js"],"names":["Badge","Card","Form","Button","Overlay","Tooltip","Alert","CirclePicker","useEffect","useRef","useState","usePlayers","Add","color","setColor","name","setName","show","setShow","target","players","setPlayers","length","submit","e","preventDefault","score","backgroundColor","value","c","hex","current","props"],"mappings":"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","sourcesContent":["import {\n  Badge,\n  Card,\n  Form,\n  Button,\n  Overlay,\n  Tooltip,\n  Alert,\n} from \"react-bootstrap\";\nimport { CirclePicker } from \"react-color\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { usePlayers } from \"../../hooks/players\";\n\nconst Add = () => {\n  const [color, setColor] = useState(\"#000000\");\n  const [name, setName] = useState(\"\");\n\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  const [players, setPlayers] = usePlayers();\n\n  useEffect(() => {\n    setShow(name.length === 0);\n  }, [name]);\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (name.length !== 0) {\n      setPlayers([...players, { name: name, score: 0, color: color }]);\n      setName(\"\");\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header style={{ backgroundColor: color }}>\n        <Card.Title>\n          <h1>{name.length == 0 ? \"Spieler hinzufügen\" : name} </h1>\n        </Card.Title>\n      </Card.Header>\n\n      <Card.Body>\n        <Form onSubmit={submit}>\n          <Form.Label>\n            <h3>Name</h3>\n          </Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ref={target}\n          ></Form.Control>\n          <br />\n\n          <Form.Label>\n            <h3>Farbe</h3>\n          </Form.Label>\n          <CirclePicker\n            color={color}\n            colors={[\n              \"#f44336\",\n              \"#e91e63\",\n              \"#9c27b0\",\n              \"#673ab7\",\n              \"#3f51b5\",\n              \"#2196f3\",\n              \"#03a9f4\",\n              \"#00bcd4\",\n              \"#009688\",\n              \"#4caf50\",\n              \"#8bc34a\",\n              \"#cddc39\",\n              \"#ffeb3b\",\n              \"#ffc107\",\n              \"#ff9800\",\n              \"#ff5722\",\n              \"#607d8b\",\n              \"#efefef\",\n            ]}\n            onChangeComplete={(c) => setColor(c.hex)}\n          />\n\n          <hr />\n\n          <Button type=\"submit\" variant=\"success\">\n            Spieler hinzufügen\n          </Button>\n        </Form>\n      </Card.Body>\n\n      <Overlay target={target.current} show={show} placement=\"bottom\">\n        {(props) => (\n          <Alert variant=\"danger\" {...props}>\n            Name ist Leer\n          </Alert>\n        )}\n      </Overlay>\n    </Card>\n  );\n};\n\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}