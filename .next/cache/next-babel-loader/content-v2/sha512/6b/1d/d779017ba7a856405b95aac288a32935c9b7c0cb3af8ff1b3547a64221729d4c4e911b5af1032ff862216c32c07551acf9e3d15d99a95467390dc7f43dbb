{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/hooks/games.js\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, useMutation, gql } from \"@apollo/client\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport const GamesProvider = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\nconst GAMES = gql`\n  query Games {\n    games {\n      id\n      name\n      date\n      players {\n        name\n        score\n      }\n    }\n  }\n`;\nexport const useGames = () => useQuery(GAMES);\nconst DELETE_GAME = gql`\n  mutation DeleteGame($id: ID!) {\n    deleteGame(id: $id)\n  }\n`;\nexport const useDeleteGame = () => useMutation(DELETE_GAME, {\n  update: (cache, {\n    data: {\n      deleteGame\n    }\n  }) => {\n    cache.modify({\n      fields: {\n        games: (existing = []) => {\n          const remove = cache.writeFragment({\n            data: deleteGame,\n            fragment: gql`\n                fragment DeleteGame on Game {\n                  id\n                }\n              `\n          });\n        }\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/hooks/games.js"],"names":["ApolloClient","InMemoryCache","ApolloProvider","useQuery","useMutation","gql","client","uri","cache","GamesProvider","children","GAMES","useGames","DELETE_GAME","useDeleteGame","update","data","deleteGame","modify","fields","games","existing","remove","writeFragment","fragment"],"mappings":";;AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,GANF,QAOO,gBAPP;AASA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;AAKA,OAAO,MAAMQ,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC3B,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,YAAiCI;AAAjC;AAAA;AAAA;AAAA;AAAA,QADK;AAIP,MAAMC,KAAK,GAAGN,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,OAAO,MAAMO,QAAQ,GAAG,MAAMT,QAAQ,CAACQ,KAAD,CAA/B;AAEP,MAAME,WAAW,GAAGR,GAAI;AACxB;AACA;AACA;AACA,CAJA;AAMA,OAAO,MAAMS,aAAa,GAAG,MAC3BV,WAAW,CAACS,WAAD,EAAc;AACvBE,EAAAA,MAAM,EAAE,CAACP,KAAD,EAAQ;AAAEQ,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,GAAR,KAAqC;AAC3CT,IAAAA,KAAK,CAACU,MAAN,CAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAACC,QAAQ,GAAG,EAAZ,KAAmB;AACxB,gBAAMC,MAAM,GAAGd,KAAK,CAACe,aAAN,CAAoB;AACjCP,YAAAA,IAAI,EAAEC,UAD2B;AAEjCO,YAAAA,QAAQ,EAAEnB,GAAI;AAC5B;AACA;AACA;AACA;AAN+C,WAApB,CAAf;AAQD;AAVK;AADG,KAAb;AAcD;AAhBsB,CAAd,CADN","sourcesContent":["import {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  useMutation,\n  gql,\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache(),\n});\n\nexport const GamesProvider = ({ children }) => (\n  <ApolloProvider client={client}>{children}</ApolloProvider>\n);\n\nconst GAMES = gql`\n  query Games {\n    games {\n      id\n      name\n      date\n      players {\n        name\n        score\n      }\n    }\n  }\n`;\n\nexport const useGames = () => useQuery(GAMES);\n\nconst DELETE_GAME = gql`\n  mutation DeleteGame($id: ID!) {\n    deleteGame(id: $id)\n  }\n`;\n\nexport const useDeleteGame = () =>\n  useMutation(DELETE_GAME, {\n    update: (cache, { data: { deleteGame } }) => {\n      cache.modify({\n        fields: {\n          games: (existing = []) => {\n            const remove = cache.writeFragment({\n              data: deleteGame,\n              fragment: gql`\n                fragment DeleteGame on Game {\n                  id\n                }\n              `,\n            });\n          },\n        },\n      });\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}