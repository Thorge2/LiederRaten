{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Overlay, Alert } from \"react-bootstrap\";\nimport { usePlayers } from \"../../hooks/players\";\nimport { useSaveGame } from \"../../hooks/games\";\n\nconst Save = () => {\n  const [players, setPlayers] = usePlayers();\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const target = useRef(null);\n  const [saveGame, {\n    data\n  }] = useSaveGame();\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Card.Header, {\n      children: /*#__PURE__*/_jsx(Card.Title, {\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          children: \"Spiel Speichern\"\n        })\n      })\n    }), /*#__PURE__*/_jsx(Card.Body, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: e => {\n          e.preventDefault();\n          if (name.length === 0 || players.length === 0) return;\n          saveGame({\n            variables: {\n              name,\n              players\n            }\n          });\n          setName(\"\");\n          setPlayers([]);\n        },\n        children: [/*#__PURE__*/_jsx(Form.Label, {\n          children: \"Name\"\n        }), /*#__PURE__*/_jsx(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          ref: target\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(Form.Label, {\n          children: [\"Spieler: \", players.length, \" \", players.length === 0 ? \"(fÃ¼ge einen Spieler hinzu)\" : \"\"]\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Button, {\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Speichern\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Overlay, {\n      target: target.current,\n      show: name.length === 0,\n      placement: \"bottom\",\n      children: props => /*#__PURE__*/_jsx(Alert, _objectSpread(_objectSpread({\n        variant: \"danger\"\n      }, props), {}, {\n        children: \"Name ist Leer\"\n      }))\n    })]\n  });\n};\n\nexport default Save;","map":null,"metadata":{},"sourceType":"module"}