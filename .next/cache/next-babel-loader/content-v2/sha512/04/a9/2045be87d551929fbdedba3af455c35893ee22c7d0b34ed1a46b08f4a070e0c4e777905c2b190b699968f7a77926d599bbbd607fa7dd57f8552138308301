{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/components/counter.js\";\nimport { Card, ListGroup, ButtonGroup, Button } from \"react-bootstrap\";\nimport { usePlayers } from \"../hooks/players\";\n\nconst Counter = ({\n  player,\n  index\n}) => {\n  const [players, setPlayers] = usePlayers();\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      horizontal: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"10rem\",\n          backgroundColor: player.color\n        },\n        onClick: () => setPlayers(players.map((p, i) => {\n          if (i === index) p.score += 1;\n          return p;\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Score: \", player.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        style: {\n          width: \"20%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          style: {\n            width: \"60%\"\n          },\n          onClick: () => setPlayers(players.map((p, i) => {\n            if (i === index) p.score += 1;\n            return p;\n          })),\n          children: \"+1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => setPlayers(players.map((p, i) => {\n            if (i === index) p.score -= 1;\n            return p;\n          })),\n          children: \"-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Counter;","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/components/counter.js"],"names":["Card","ListGroup","ButtonGroup","Button","usePlayers","Counter","player","index","players","setPlayers","width","backgroundColor","color","map","p","i","score","name"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,iBAArD;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,UAAU,EAAxC;AAEA,sBACE,QAAC,SAAD,CAAW,IAAX;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,UAAU,MAArB;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAEL,MAAM,CAACM;AAA1C,SADT;AAEE,QAAA,OAAO,EAAE,MACPH,UAAU,CACRD,OAAO,CAACK,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,cAAIA,CAAC,KAAKR,KAAV,EAAiBO,CAAC,CAACE,KAAF,IAAW,CAAX;AACjB,iBAAOF,CAAP;AACD,SAHD,CADQ;AAHd;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,KAAK,EAAE;AADF,SADT;AAAA,+BAKE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,mCACE;AAAA,wBAAKJ,MAAM,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,KAAN;AAAA,kCAAoBX,MAAM,CAACU,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAZF,eAwBE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAApB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,SADV;AAEE,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,OAAO,EAAE,MACPD,UAAU,CACRD,OAAO,CAACK,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,gBAAIA,CAAC,KAAKR,KAAV,EAAiBO,CAAC,CAACE,KAAF,IAAW,CAAX;AACjB,mBAAOF,CAAP;AACD,WAHD,CADQ,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,QADV;AAEE,UAAA,OAAO,EAAE,MACPL,UAAU,CACRD,OAAO,CAACK,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,gBAAIA,CAAC,KAAKR,KAAV,EAAiBO,CAAC,CAACE,KAAF,IAAW,CAAX;AACjB,mBAAOF,CAAP;AACD,WAHD,CADQ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CA7DD;;AA+DA,eAAeT,OAAf","sourcesContent":["import { Card, ListGroup, ButtonGroup, Button } from \"react-bootstrap\";\nimport { usePlayers } from \"../hooks/players\";\n\nconst Counter = ({ player, index }) => {\n  const [players, setPlayers] = usePlayers();\n\n  return (\n    <ListGroup.Item>\n      <ListGroup horizontal>\n        <div\n          style={{ width: \"10rem\", backgroundColor: player.color }}\n          onClick={() =>\n            setPlayers(\n              players.map((p, i) => {\n                if (i === index) p.score += 1;\n                return p;\n              })\n            )\n          }\n        />\n        <Card\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <Card.Body>\n            <Card.Title>\n              <h3>{player.name}</h3>\n            </Card.Title>\n            <Card.Title>Score: {player.score}</Card.Title>\n          </Card.Body>\n        </Card>\n        <ButtonGroup style={{ width: \"20%\" }}>\n          <Button\n            variant=\"success\"\n            style={{ width: \"60%\" }}\n            onClick={() =>\n              setPlayers(\n                players.map((p, i) => {\n                  if (i === index) p.score += 1;\n                  return p;\n                })\n              )\n            }\n          >\n            +1\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() =>\n              setPlayers(\n                players.map((p, i) => {\n                  if (i === index) p.score -= 1;\n                  return p;\n                })\n              )\n            }\n          >\n            -1\n          </Button>\n        </ButtonGroup>\n      </ListGroup>\n    </ListGroup.Item>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}