{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/index.js\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { GamesProvider, useGames } from \"../../hooks/games\";\nimport Game from \"../../components/game\";\n\nconst Games = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useGames();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Spiele\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: loading ? \"loading...\" : data.games.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Keine Spiele gespeichert...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this) : data.games.map((g, i) => /*#__PURE__*/_jsxDEV(Game, {\n          game: g\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Games;","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/index.js"],"names":["Card","ListGroup","GamesProvider","useGames","Game","Games","loading","error","data","overflow","games","length","map","g","i"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,iBAAhC;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,mBAAxC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,EAAzC;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBACGH,OAAO,GACN,YADM,GAEJE,IAAI,CAACE,KAAL,CAAWC,MAAX,IAAqB,CAArB,gBACF;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADE,GAKFH,IAAI,CAACE,KAAL,CAAWE,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,kBAAU,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED;AAAZ,WAAoBC,CAApB;AAAA;AAAA;AAAA;AAAA,gBAAzB;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BD;;AA4BA,eAAeT,KAAf","sourcesContent":["import { Card, ListGroup } from \"react-bootstrap\";\nimport { GamesProvider, useGames } from \"../../hooks/games\";\nimport Game from \"../../components/game\";\n\nconst Games = () => {\n  const { loading, error, data } = useGames();\n\n  return (\n    <Card>\n      <Card.Header>\n        <Card.Title>\n          <h1>Spiele</h1>\n        </Card.Title>\n      </Card.Header>\n\n      <Card.Body style={{ overflow: \"auto\" }}>\n        <ListGroup variant=\"flush\">\n          {loading ? (\n            \"loading...\"\n          ) : data.games.length == 0 ? (\n            <div>\n              <h2>Keine Spiele gespeichert...</h2>\n            </div>\n          ) : (\n            data.games.map((g, i) => <Game game={g} key={i}></Game>)\n          )}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}