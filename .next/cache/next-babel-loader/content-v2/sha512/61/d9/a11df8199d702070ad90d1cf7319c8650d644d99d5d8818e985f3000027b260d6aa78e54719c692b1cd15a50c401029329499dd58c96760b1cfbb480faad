{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/thorge/Projects/LiederRaten/App/pages/games/save.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Overlay, Alert } from \"react-bootstrap\";\nimport { usePlayers } from \"../../hooks/players\";\nimport { useSaveGame } from \"../../hooks/games\";\n\nvar Save = function Save() {\n  _s();\n\n  var _usePlayers = usePlayers(),\n      _usePlayers2 = _slicedToArray(_usePlayers, 2),\n      players = _usePlayers2[0],\n      setPlayers = _usePlayers2[1];\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var target = useRef(null);\n\n  var _useSaveGame = useSaveGame(),\n      _useSaveGame2 = _slicedToArray(_useSaveGame, 2),\n      saveGame = _useSaveGame2[0],\n      data = _useSaveGame2[1].data;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Spiel Speichern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n          if (name.length === 0 || players.length === 0) return;\n          saveGame({\n            variables: {\n              name: name,\n              players: players\n            }\n          });\n          setName(\"\");\n          setPlayers([]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: function onChange(e) {\n            return setName(e.target.value);\n          },\n          ref: target\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Spieler: \", players.length, \" \", players.length === 0 ? \"(füge einen Spieler hinzu)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Speichern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: name.length === 0,\n      placement: \"bottom\",\n      children: function children(props) {\n        return /*#__PURE__*/_jsxDEV(Alert, _objectSpread(_objectSpread({\n          variant: \"danger\"\n        }, props), {}, {\n          children: \"Name ist Leer\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Save, \"OtYonVrHTVWkU09cLvyAQlUCssA=\", false, function () {\n  return [usePlayers, useSaveGame];\n});\n\n_c = Save;\nexport default Save;\n\nvar _c;\n\n$RefreshReg$(_c, \"Save\");","map":{"version":3,"sources":["/home/thorge/Projects/LiederRaten/App/pages/games/save.js"],"names":["useState","useEffect","useRef","Card","Form","Button","Overlay","Alert","usePlayers","useSaveGame","Save","players","setPlayers","name","setName","target","saveGame","data","e","preventDefault","length","variables","value","current","props"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Overlay, Alert } from \"react-bootstrap\";\nimport { usePlayers } from \"../../hooks/players\";\nimport { useSaveGame } from \"../../hooks/games\";\n\nconst Save = () => {\n  const [players, setPlayers] = usePlayers();\n  const [name, setName] = useState(\"\");\n\n  const target = useRef(null);\n\n  const [saveGame, { data }] = useSaveGame();\n\n  return (\n    <Card>\n      <Card.Header>\n        <Card.Title>\n          <h1>Spiel Speichern</h1>\n        </Card.Title>\n      </Card.Header>\n\n      <Card.Body>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (name.length === 0 || players.length === 0) return;\n            saveGame({ variables: { name, players } });\n            setName(\"\");\n            setPlayers([]);\n          }}\n        >\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ref={target}\n          />\n          <br />\n          <Form.Label>\n            Spieler: {players.length}{\" \"}\n            {players.length === 0 ? \"(füge einen Spieler hinzu)\" : \"\"}\n          </Form.Label>\n          <br />\n          <Button type=\"submit\" variant=\"success\">\n            Speichern\n          </Button>\n        </Form>\n      </Card.Body>\n\n      <Overlay\n        target={target.current}\n        show={name.length === 0}\n        placement=\"bottom\"\n      >\n        {(props) => (\n          <Alert variant=\"danger\" {...props}>\n            Name ist Leer\n          </Alert>\n        )}\n      </Overlay>\n    </Card>\n  );\n};\n\nexport default Save;\n"]},"metadata":{},"sourceType":"module"}